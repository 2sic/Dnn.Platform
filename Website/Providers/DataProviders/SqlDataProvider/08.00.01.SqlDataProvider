/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/



/************************************************************/
/*****              SqlDataProvider                     *****/
/************************************************************/

/* Create HasBeenPublished field */
IF NOT EXISTS
(SELECT * FROM sys.all_columns c INNER JOIN sys.tables t
	ON c.object_id = t.object_id AND t.name = '{objectQualifier}Files'
	WHERE c.name = 'HasBeenPublished')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}Files]
		ADD HasBeenPublished bit NULL	
	ALTER TABLE {databaseOwner}[{objectQualifier}Files] ADD CONSTRAINT
		DF_{objectQualifier}Files_HasBeenPublished DEFAULT 1 FOR HasBeenPublished	
END

GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}GetHasBeenPublished]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
  DROP PROCEDURE {databaseOwner}{objectQualifier}GetHasBeenPublished
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}GetHasBeenPublished] 
	@FileId					int
AS
BEGIN

	SELECT [HasBeenPublished]
	FROM {databaseOwner}[{objectQualifier}Files] f
	WHERE f.FileId = @FileId

END
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}SetHasBeenPublished]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
  DROP PROCEDURE {databaseOwner}{objectQualifier}SetHasBeenPublished
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}SetHasBeenPublished] 
	@FileId					int,
	@HasBeenPublished		bit
AS
BEGIN

	-- Change Files.HasBeenPublished to the passed value
	UPDATE {databaseOwner}[{objectQualifier}Files]
	SET	 [HasBeenPublished] = @HasBeenPublished
	FROM {databaseOwner}[{objectQualifier}Files] f
	WHERE f.FileId = @FileId
END
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}DeleteFileVersion]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}DeleteFileVersion]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}DeleteFileVersion] 
	@FileId int,
	@Version int
AS
BEGIN
	DECLARE @PublishedVersion int

	-- Check there is at least one version
	IF NOT EXISTS(SELECT FileID FROM {objectQualifier}FileVersions WHERE FileId = @FileId)
	BEGIN
		SELECT 1 -- We need to return 1 in order to allow initial version
		RETURN
	END
		
	SELECT @PublishedVersion = PublishedVersion
	FROM {databaseOwner}{objectQualifier}Files
	WHERE FileId = @FileId

	IF @PublishedVersion = @Version 
	BEGIN
		-- Get the previous version
		SELECT @PublishedVersion = MAX(Version)
		FROM {databaseOwner}{objectQualifier}FileVersions 
		WHERE FileId = @FileId
			AND Version < @Version

		-- If there is no previous version, get the min exsisting version
		IF @PublishedVersion IS NULL 
			SELECT @PublishedVersion = MIN(Version)
			FROM {databaseOwner}{objectQualifier}FileVersions 
			WHERE FileId = @FileId

		-- Update the published version
		IF @PublishedVersion IS NOT NULL 
		BEGIN
			UPDATE {databaseOwner}{objectQualifier}Files
			SET [PublishedVersion] = @PublishedVersion,
				[Extension] = v.[Extension],
				[Size] = v.[Size],
				[Width] = v.Width,		
				[Height] = v.Height,
				[ContentType] = v.ContentType,
				[Content] = v.Content,
				[LastModifiedByUserID] = v.LastModifiedByUserID,
				[LastModifiedOnDate] = v.LastModifiedOnDate,
				[SHA1Hash] = v.SHA1Hash
			FROM {databaseOwner}{objectQualifier}files AS f
				INNER JOIN {databaseOwner}{objectQualifier}FileVersions AS v
				ON ( f.FileId = v.FileId AND v.Version = @PublishedVersion)		
			WHERE f.FileId = @FileId

			DELETE FROM {databaseOwner}{objectQualifier}FileVersions
			WHERE FileId = @FileId 
			AND Version = @PublishedVersion
		END
	END

	DELETE FROM {databaseOwner}{objectQualifier}FileVersions
	WHERE FileId = @FileId 
	  AND Version = @Version

	SELECT @PublishedVersion
END

GO